namespace Zebble.Tooling
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using Olive;

    abstract class BaseGenerator
    {
        public List<string> Errors = new();

        protected string Error(string error)
        {
            Errors.Add(error);
            ConsoleHelpers.Error(error);
            return null;
        }

        static void Validate()
        {
            if (!DirectoryContext.AppUIFolder.Exists())
                throw new IOException("App.UI Directory not found: " + DirectoryContext.AppUIFolder.FullName);
        }

        protected abstract string GenerateCode();

        protected abstract string GetFileName();

        internal void Run()
        {
            try { Validate(); }
            catch (Exception ex) { Error(ex.Message); return; }

            var codes = GenerateCode();

            var output = DirectoryContext.AppUIFolder.GetFile(GetFileName());

            if (Errors.None() || !output.Exists())
            {
                var newFile = @"//----------------------
// <auto-generated>
//     GENERATED BY ZEBBLE
// </auto-generated>
#pragma warning disable  IDE0017, CS0108, CS0436
//----------------------

" +
                    codes;

                output.WriteAllText(newFile);
            }
        }
    }
}